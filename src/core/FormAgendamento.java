/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package core;

import static core.FormPaciente.listaBairro;
import static core.FormPaciente.usu;
import dao.DaoAgenda;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import model.BeansAgenda;
import model.ModeloTabela;
import util.ConexaoBD;

/**
 *
 * @author MarceloMartinsVilara
 */
public class FormAgendamento extends javax.swing.JFrame {
    
    // esta lista será utilizada para armazenar os id dos medicos 
    static ArrayList listaMedico = new ArrayList();

    ConexaoBD conecta = new ConexaoBD();
    BeansAgenda age = new BeansAgenda();
    DaoAgenda mod = new DaoAgenda();
    
    
    public FormAgendamento() throws ClassNotFoundException, SQLException {
        initComponents();
         preencherTabela("SELECT * FROM pacientes");
         preencherMedico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldAgendaPacienteNome = new javax.swing.JTextField();
        jComboBoxAgendaTurno = new javax.swing.JComboBox();
        jButtonBuscarAgendaPaciente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAgenda = new javax.swing.JTable();
        jComboBoxSelecionaMedico = new javax.swing.JComboBox();
        jTextFieldMotivo = new javax.swing.JTextField();
        jButtonFinalizarAgeendamento = new javax.swing.JButton();
        jButtonCancelarAgendamento = new javax.swing.JButton();
        jDateChooserAgendamento = new com.toedter.calendar.JDateChooser();
        jLabelIdPac = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setEnabled(false);

        jLabel2.setText("Paciente");

        jLabel3.setText("Médico");

        jLabel4.setText("Data");

        jLabel5.setText("Motivo");

        jLabel6.setText("Turno");

        jTextFieldAgendaPacienteNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgendaPacienteNomeActionPerformed(evt);
            }
        });

        jComboBoxAgendaTurno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o turno...", "Matutino", "Vespertino", "Noturno" }));
        jComboBoxAgendaTurno.setEnabled(false);

        jButtonBuscarAgendaPaciente.setText("Buscar");
        jButtonBuscarAgendaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarAgendaPacienteActionPerformed(evt);
            }
        });

        jTableAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAgenda);

        jComboBoxSelecionaMedico.setEnabled(false);

        jTextFieldMotivo.setEnabled(false);

        jButtonFinalizarAgeendamento.setText("FINALIZAR AGENDAMENTO");
        jButtonFinalizarAgeendamento.setEnabled(false);
        jButtonFinalizarAgeendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizarAgeendamentoActionPerformed(evt);
            }
        });

        jButtonCancelarAgendamento.setText("CANCELAR AGENDAMENTO");
        jButtonCancelarAgendamento.setEnabled(false);
        jButtonCancelarAgendamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarAgendamentoActionPerformed(evt);
            }
        });

        jDateChooserAgendamento.setEnabled(false);

        jLabelIdPac.setText("idPac");
        jLabelIdPac.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldAgendaPacienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscarAgendaPaciente)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelIdPac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxAgendaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonFinalizarAgeendamento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonCancelarAgendamento))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxSelecionaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooserAgendamento, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                            .addComponent(jTextFieldMotivo))))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldAgendaPacienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscarAgendaPaciente)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxAgendaTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIdPac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jComboBoxSelecionaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jDateChooserAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFinalizarAgeendamento)
                    .addComponent(jButtonCancelarAgendamento))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Formulário de Agendamento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(372, 372, 372))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1054, 592));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

      // metodo utilizado para preencher o combo bairro apos consulta 
    public void preencherMedico() throws ClassNotFoundException, SQLException {
        conecta.conect();
        conecta.executaSql("SELECT * FROM medicos ORDER BY nome_medico");
        jComboBoxSelecionaMedico.addItem("Selecione o médico...");
        conecta.rs.first();
        do {
         jComboBoxSelecionaMedico.addItem(conecta.rs.getString("nome_medico")); // preenchimento automático do combobox de bairros buscando do banco de dados
         listaMedico.add(conecta.rs.getInt("idMedicos")); // seleciona o id do campo escolhido
        } while (conecta.rs.next());
        conecta.desconecta();
    }
    
    private void jButtonBuscarAgendaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarAgendaPacienteActionPerformed
           //  String sql = "SELECT * FROM pacientes WHERE pac_nome like '%"+jTextFieldAgendaPaciente.getText()+"%'";
             String valor = jTextFieldAgendaPacienteNome.getText();
             String sql;
             try {
	     int novo_valor = Integer.parseInt(valor);
            sql = "SELECT * FROM pacientes WHERE pac_rg like '%"+novo_valor+"%'";
	} catch (NumberFormatException e) {	  
          sql = "SELECT * FROM pacientes WHERE pac_nome like '%"+valor+"%'";
        }
             try {
                
                preencherTabela(sql);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FormPaciente.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FormPaciente.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButtonBuscarAgendaPacienteActionPerformed

    private void jTableAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAgendaMouseClicked
         
        String id_paciente = ""+jTableAgenda.getValueAt(jTableAgenda.getSelectedRow(), 0);
        try {
            conecta.conect();
            conecta.executaSql("SELECT * FROM pacientes WHERE idPaciente="+id_paciente+"");
            conecta.rs.first();
            jTextFieldAgendaPacienteNome.setText(conecta.rs.getString("pac_nome"));
            jLabelIdPac.setText(String.valueOf(conecta.rs.getInt("idPAciente")));
            jButtonCancelarAgendamento.setEnabled(true);
            jComboBoxAgendaTurno.setEnabled(true);
           jComboBoxSelecionaMedico.setEnabled(true);
          jDateChooserAgendamento.setEnabled(true);
          jTextFieldMotivo.setEnabled(true);          
          jButtonFinalizarAgeendamento.setEnabled(true);
          jButtonCancelarAgendamento.setEnabled(true);
          
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormMedico.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            conecta.desconecta();
        } catch (SQLException ex) {
            Logger.getLogger(FormMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableAgendaMouseClicked

    private void jTextFieldAgendaPacienteNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAgendaPacienteNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgendaPacienteNomeActionPerformed

    private void jButtonFinalizarAgeendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizarAgeendamentoActionPerformed
      
        if (jTextFieldAgendaPacienteNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Favor preencher o campo nome do paciente!");
            jTextFieldAgendaPacienteNome.requestFocus();
            return;
        }
        
          if (String.valueOf(jComboBoxAgendaTurno.getSelectedItem()) == "Selecione o turno...") {
            JOptionPane.showMessageDialog(null, "Favor escolher um turno!");
            jComboBoxAgendaTurno.requestFocus();
            return;
        }
        
         if (String.valueOf(jComboBoxSelecionaMedico.getSelectedItem()) == "Selecione o médico...") {
            JOptionPane.showMessageDialog(null, "Favor escolher um médico!");
            jComboBoxSelecionaMedico.requestFocus();
            return;
        }       
      
         
           if (jDateChooserAgendamento.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Favor preencher o campo data da consulta!");
            jDateChooserAgendamento.requestFocus();
            return;
        }
            
            age.setIdAgenda(Integer.parseInt(jLabelIdPac.getText()));
            age.setAgenda_turno(String.valueOf(jComboBoxAgendaTurno.getSelectedItem()));
            // pega o índice da lista baseado no index do combobox menos 1 e insere na lista que armazena os id dos médicos
            int idMedico = (int) listaMedico.get(jComboBoxSelecionaMedico.getSelectedIndex() - 1);            
            age.setAgenda_codmedico(idMedico);
            
            age.setAgenda_codpac(Integer.valueOf(jLabelIdPac.getText()));
            
            SimpleDateFormat formatador = new SimpleDateFormat("yyyy-MM-dd");// transforma a data para o formato do banco de dados
            age.setAgenda_data(formatador.format(jDateChooserAgendamento.getDate()));
            
            age.setAgenda_motivo(jTextFieldMotivo.getText());
            age.setAgenda_status("Aberto");
            
        try {
            mod.salvarAgendamento(age);
            JOptionPane.showMessageDialog(null, "Agendamento inserido com sucesso"); 
            dispose();
            jTextFieldAgendaPacienteNome.setText("");
           jComboBoxAgendaTurno.setEnabled(false);
           jComboBoxAgendaTurno.setSelectedIndex(0);
           jComboBoxSelecionaMedico.setEnabled(false);
           jComboBoxSelecionaMedico.setSelectedIndex(0);
          jDateChooserAgendamento.setEnabled(false);
          jDateChooserAgendamento.setDate(null);
          jTextFieldMotivo.setEnabled(false);          
          jTextFieldMotivo.setText("");
          jButtonFinalizarAgeendamento.setEnabled(false);
          jButtonCancelarAgendamento.setEnabled(false);
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FormAgendamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        
           
          
           
           
    }//GEN-LAST:event_jButtonFinalizarAgeendamentoActionPerformed

    private void jButtonCancelarAgendamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarAgendamentoActionPerformed
           jTextFieldAgendaPacienteNome.setText("");
           jComboBoxAgendaTurno.setEnabled(false);
           jComboBoxAgendaTurno.setSelectedIndex(0);
           jComboBoxSelecionaMedico.setEnabled(false);
           jComboBoxSelecionaMedico.setSelectedIndex(0);
          jDateChooserAgendamento.setEnabled(false);
          jDateChooserAgendamento.setDate(null);
          jTextFieldMotivo.setEnabled(false);          
          jTextFieldMotivo.setText("");
          jButtonFinalizarAgeendamento.setEnabled(false);
          jButtonCancelarAgendamento.setEnabled(false);
    }//GEN-LAST:event_jButtonCancelarAgendamentoActionPerformed

     public void preencherTabela(String Sql) throws ClassNotFoundException, SQLException{
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID","Nome","Telefone","RG","Bairro"};
        
        conecta.conect();
        conecta.executaSql(Sql);
        
        try{
            conecta.rs.first();
            do {                
                dados.add(new Object[]{
                    conecta.rs.getInt("idPaciente"),
                    conecta.rs.getString("pac_nome"),
                    conecta.rs.getString("pac_telefone"),
                    conecta.rs.getString("pac_rg"),
                    conecta.rs.getString("pac_bairro"),
                });
            } while (conecta.rs.next());
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "erro ao preencher arraylist"+ex.getMessage());
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        
        jTableAgenda.setModel(modelo);
        jTableAgenda.getColumnModel().getColumn(0).setPreferredWidth(80); // O zero significa qua é a primeira coluna do array
        jTableAgenda.getColumnModel().getColumn(0).setResizable(false);    // não pode ser modificado o tamanho da coluna
        jTableAgenda.getColumnModel().getColumn(1).setPreferredWidth(340); // O zero significa qua é a primeira coluna do array
        jTableAgenda.getColumnModel().getColumn(1).setResizable(false);    // não pode ser modificado o tamanho da coluna
        jTableAgenda.getColumnModel().getColumn(2).setPreferredWidth(150); // O zero significa qua é a primeira coluna do array
        jTableAgenda.getColumnModel().getColumn(2).setResizable(false);    // não pode ser modificado o tamanho da coluna
        jTableAgenda.getColumnModel().getColumn(3).setPreferredWidth(140); // O zero significa qua é a primeira coluna do array
        jTableAgenda.getColumnModel().getColumn(3).setResizable(false);    // não pode ser modificado o tamanho da coluna
        jTableAgenda.getColumnModel().getColumn(4).setPreferredWidth(140); // O zero significa qua é a primeira coluna do array
        jTableAgenda.getColumnModel().getColumn(4).setResizable(false);    // não pode ser modificado o tamanho da coluna
        jTableAgenda.getTableHeader().setReorderingAllowed(false);   // não pode reordenar a tabela
        jTableAgenda.setAutoResizeMode(jTableAgenda.AUTO_RESIZE_OFF); // tabela não pode redimensionada
        jTableAgenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);  // só seleciona um campo por vez
        conecta.desconecta();
        
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FormAgendamento().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FormAgendamento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FormAgendamento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscarAgendaPaciente;
    private javax.swing.JButton jButtonCancelarAgendamento;
    private javax.swing.JButton jButtonFinalizarAgeendamento;
    private javax.swing.JComboBox jComboBoxAgendaTurno;
    private javax.swing.JComboBox jComboBoxSelecionaMedico;
    private com.toedter.calendar.JDateChooser jDateChooserAgendamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelIdPac;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAgenda;
    private javax.swing.JTextField jTextFieldAgendaPacienteNome;
    private javax.swing.JTextField jTextFieldMotivo;
    // End of variables declaration//GEN-END:variables
}
